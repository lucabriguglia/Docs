<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Docs</name>
    </assembly>
    <members>
        <member name="T:Docs.AssemblyScanner">
            <inheritdoc />
        </member>
        <member name="M:Docs.AssemblyScanner.Scan(System.Reflection.Assembly[])">
            <inheritdoc />
        </member>
        <member name="T:Docs.Attributes.DocRequestAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Attributes.DocRequestAttribute.Target">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Attributes.DocRequestAttribute.#ctor(System.Type)">
            <summary>
            
            </summary>
            <param name="target"></param>
        </member>
        <member name="T:Docs.Attributes.DocTargetAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Attributes.DocTargetAttribute.Context">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Attributes.DocTargetAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Attributes.DocTargetAttribute.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Docs.DocumentationGenerator">
            <inheritdoc />
        </member>
        <member name="M:Docs.DocumentationGenerator.#ctor(Docs.IAssemblyScanner)">
            <summary>
            
            </summary>
            <param name="assemblyScanner"></param>
        </member>
        <member name="M:Docs.DocumentationGenerator.Generate(System.Reflection.Assembly[])">
            <inheritdoc />
        </member>
        <member name="T:Docs.Extensions.DocumentationExtensions">
            <summary>
            Utility class to provide documentation for various types where available with the assembly
            </summary>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.GetDocumentation(System.Reflection.MethodInfo)">
            <summary>
            Provides the documentation comments for a specific method
            </summary>
            <param name="methodInfo">The MethodInfo (reflection data ) of the member to find documentation for</param>
            <returns>The XML fragment describing the method</returns>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.GetDocumentation(System.Reflection.MemberInfo)">
            <summary>
            Provides the documentation comments for a specific member
            </summary>
            <param name="memberInfo">The MemberInfo (reflection data) or the member to find documentation for</param>
            <returns>The XML fragment describing the member</returns>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.GetSummary(System.Reflection.MemberInfo)">
            <summary>
            Returns the Xml documentation summary comment for this member
            </summary>
            <param name="memberInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.GetDocumentation(System.Type)">
            <summary>
            Provides the documentation comments for a specific type
            </summary>
            <param name="type">Type to find the documentation for</param>
            <returns>The XML fragment that describes the type</returns>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.GetSummary(System.Type)">
            <summary>
            Gets the summary portion of a type's documentation or returns an empty string if not available
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.XmlFromName(System.Type,System.Char,System.String)">
            <summary>
            Obtains the XML Element that describes a reflection element by searching the 
            members for a member that has a name that describes the element.
            </summary>
            <param name="type">The type or parent type, used to fetch the assembly</param>
            <param name="prefix">The prefix as seen in the name attribute in the documentation XML</param>
            <param name="name">Where relevant, the full name qualifier for the element</param>
            <returns>The member that has a name that describes the specified reflection element</returns>
        </member>
        <member name="F:Docs.Extensions.DocumentationExtensions.Cache">
            <summary>
            A cache used to remember Xml documentation for assemblies
            </summary>
        </member>
        <member name="F:Docs.Extensions.DocumentationExtensions.FailCache">
            <summary>
            A cache used to store failure exceptions for assembly lookups
            </summary>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.XmlFromAssembly(System.Reflection.Assembly)">
            <summary>
            Obtains the documentation file for the specified assembly
            </summary>
            <param name="assembly">The assembly to find the XML document for</param>
            <returns>The XML document</returns>
            <remarks>This version uses a cache to preserve the assemblies, so that 
            the XML file is not loaded and parsed on every single lookup</remarks>
        </member>
        <member name="M:Docs.Extensions.DocumentationExtensions.XmlFromAssemblyNonCached(System.Reflection.Assembly)">
            <summary>
            Loads and parses the documentation file for the specified assembly
            </summary>
            <param name="assembly">The assembly to find the XML document for</param>
            <returns>The XML document</returns>
        </member>
        <member name="T:Docs.Extensions.StringExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Extensions.StringExtensions.InsertSpaceBeforeUpperCase(System.String)">
            <summary>
            
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="T:Docs.Extensions.XmlExtensions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Extensions.XmlExtensions.GetSummaryFor(System.Xml.XmlDocument,System.Type)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Docs.Extensions.XmlExtensions.GetSummaryFor(System.Xml.XmlDocument,System.Reflection.MemberInfo)">
            <summary>
            
            </summary>
            <param name="document"></param>
            <param name="memberInfo"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Docs.IAssemblyScanner">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.IAssemblyScanner.Scan(System.Reflection.Assembly[])">
            <summary>
            
            </summary>
            <param name="assemblies"></param>
        </member>
        <member name="T:Docs.IDocumentationGenerator">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.IDocumentationGenerator.Generate(System.Reflection.Assembly[])">
            <summary>
            
            </summary>
            <param name="assemblies"></param>
        </member>
        <member name="T:Docs.Models.ContextModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.ContextModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.ContextModel.Targets">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Models.ContextModel.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Docs.Models.ContextModel.AddTarget(Docs.Models.TargetModel)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Docs.Models.ContextModel.AddRequest(Docs.Models.RequestModel)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="T:Docs.Models.RequestModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.RequestModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.RequestModel.NormalizedName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.RequestModel.Summary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.RequestModel.TargetName">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Models.RequestModel.#ctor(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="summary"></param>
            <param name="targetName"></param>
        </member>
        <member name="T:Docs.Models.TargetModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.TargetModel.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.TargetModel.NormalizedName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.TargetModel.Summary">
            <summary>
            
            </summary>
        </member>
        <member name="P:Docs.Models.TargetModel.Requests">
            <summary>
            
            </summary>
        </member>
        <member name="M:Docs.Models.TargetModel.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="summary"></param>
            <exception cref="T:System.ArgumentException"></exception>
        </member>
        <member name="M:Docs.Models.TargetModel.AddRequest(Docs.Models.RequestModel)">
            <summary>
            
            </summary>
            <param name="request"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
    </members>
</doc>
